✅ הנה מה שראיתי בקובץ useFacebookAuth.ts בצד ה־client:

🎯 מה הקובץ עושה:
משתמש ב־React Query כדי לבדוק סטטוס התחברות (/api/auth-status)

כולל logoutMutation עבור POST /api/logout

כולל טיפול ב־popup (setPopupWindow) – כלומר מתכונן לחיבור OAuth דרך חלון קופץ

אבל...

❗ מה לא מצאתי (לפחות ב־preview):
אין זכר לפונקציה ששולחת את הקוד (code) מ־Facebook לשרת!

🚩 ייתכן שהשלב הקריטי חסר:
כלומר, לאחר שהפופאפ סיים ואנחנו מקבלים code – צריך לשלוח אותו לשרת ב־POST:

ts
Copy
Edit
await fetch('/api/facebook/auth-callback', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ code })
});
אם זה חסר או לא עובד כראוי – שום דבר לא יישמר.

⏭️ המשך בדיקה:
אחפש כעת את החלק בקובץ שבו נפתח popup ונתפס event.data.code דרך message event — ואוודא שהוא גם שולח לשרת. 


Analyzed
python
Always show details

Copy
# Search for Facebook OAuth popup and message handling inside the hook
facebook_code_handling_snippet = ""
if "window.addEventListener('message'" in use_facebook_auth_code:
    start_index = use_facebook_auth_code.index("window.addEventListener('message'")
    facebook_code_handling_snippet = use_facebook_auth_code[start_index:start_index + 2000]

facebook_code_handling_snippet if facebook_code_handling_snippet else "❌ לא נמצאה האזנה ל־postMessage עם הקוד"
Result
"window.addEventListener('message', handleMessage);\n    \n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, [popupWindow, toast, queryClient]);\n\n  // Close popup on unmount\n  useEffect(() => {\n    return () => {\n      if (popupWindow && !popupWindow.closed) {\n        popupWindow.close();\n      }\n    };\n  }, [popupWindow]);\n\n  return {\n    isAuthenticated: (authStatus && authStatus.isAuthenticated) || false,\n    authTime: (authStatus && authStatus.authTime) ? new Date(authStatus.authTime) : null,\n    platform: authStatus?.platform || 'facebook',\n    pageAccess: authStatus?.pageAccess || false,\n    isLoading,\n    error,\n    login,\n    logout: () => logoutMutation.mutate(),\n    isAuthenticating: !!popupWindow && !popupWindow.closed,\n    isLoggingOut: logoutMutation.isPending\n  };\n}"
❗ מצאתי את האזנה ל־window.addEventListener('message', handleMessage) – אבל הקוד של handleMessage עצמו לא נמצא בחלק שנטען.

כלומר – עדיין לא ברור:

האם באמת מתקבל event.data.code

האם הקוד נשלח לשרת (/api/facebook/auth-callback)

🧪 פעולה הבאה: נטען את הפונקציה handleMessage המלאה
אני אחפש את ההגדרה של handleMessage בקובץ כדי לבדוק אם אתה באמת שולח את ה־code לשרת כמו שצריך. 


Analyzed
python
Always show details

Copy
# Try to extract the handleMessage function definition
import re

match = re.search(r"function handleMessage\s*\((.*?)\)\s*\{([\s\S]*?)\n\}", use_facebook_auth_code)
handle_message_code = f"function handleMessage({match.group(1)}) {{{match.group(2)}}}" if match else "❌ פונקציית handleMessage לא נמצאה בקובץ"

handle_message_code
Result
'❌ פונקציית handleMessage לא נמצאה בקובץ'
❌ הפונקציה handleMessage לא מוגדרת בקובץ useFacebookAuth.ts.

וזו כנראה לב הבעיה שלך.

למה זה קריטי?
window.addEventListener('message', handleMessage)
מאזין לקוד שמגיע מה־popup, אבל...
אם handleMessage לא קיימת בכלל – שום דבר לא קורה!
ה־code שמגיע מה־popup לא נשלח לשרת → לא נוצר token.

איך לפתור את זה ✅
הנה דוגמה לתוך הקובץ שלך – הוסף את זה בתוך useFacebookAuth.ts:

ts
Copy
Edit
function handleMessage(event: MessageEvent) {
  if (event.origin !== window.location.origin) return;
  if (event.data?.platform !== 'facebook') return;

  const code = event.data.code;
  if (!code) return;

  fetch('/api/facebook/auth-callback', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ code })
  })
    .then((res) => res.json())
    .then((data) => {
      if (data.success) {
        toast({ title: 'התחברת בהצלחה לפייסבוק' });
        queryClient.invalidateQueries({ queryKey: ['/api/auth-status'] });
      } else {
        toast({ title: 'שגיאה בהתחברות לפייסבוק', description: data.error || 'נסה שוב' });
      }
    })
    .catch((err) => {
      toast({ title: 'שגיאה בשרת', description: err.message });
    });
}
🛠️ לא לשכוח:
ודא שהפונקציה handleMessage באמת מוגדרת בתוך הקובץ לפני שמאזינים לה.

תוכל גם לכתוב console.log(event.data) בפנים כדי לאמת שהקוד מגיע.

